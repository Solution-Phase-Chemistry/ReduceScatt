paramDict= {
        'binSetup'  : 'points', #set bins or bin by unique axis values or by points = 'fixed', 'unique', 'points'
        'binSet2'   : 300, # integer points per bin for 'points' or list of bin centers for 'fixed'
        'binMethod' : 'ave', ## 'ave' or 'sum' ? 
        
        'qnorm'     : (3,4), ## low,high or None (None=use I0)
        'qrange'    : (.5,4.5), ## for plots
        
        'scan_var' : None,  #variable that is being scanned
        'x_var'   : None, #binning axis, if it is not scan variable
        
        'show_filters'  : True, #show filter plots
        
        'useAzav_std'  : False, #False, 'percent', 'WAve'; if False, no azav_sqr processing, if 'percent', only use percent filter, if 'Wave' then use it to calculate weighted averages throughout
        'azav_percent_filter' : 50, # if useAzav_std='percent' or 'WAve', use azav_std as filter, reject bins where std is > this percent of bin mean value
       
        'ipm'    : 4, # select ipm to use
        'corr_filter' : True, #whether to filter based on I0/ipm correlation
        'ipm_filter' : (10,None), # if corr_filter, can set limits for ipm intensity
        'I0_threshold'  : 50, #reject values less than this for I0 (aka Isum)
        'use_TT'   :   True,  #options are True, False, and 'filter'  ('filter is for filter only) 
        't0_corr' : None,  #false or float offset for time zero
        
        'enforce_iso' : False # enforce off shots isotropic
        'NonLin_corr': None, #None, SVD, poly, or SVDbyBin
        'AdjSub'    : 50, #number of adjascent off shots to average and subtract, -1 subtracts all
        
        'aniso'  : True, # calculate anisotropy?
        'shift_n': 0, # phi offset for anisotropy in bins
        
        'xstat' : True, #calculate mean and std for x axis during binning step
    
    
        }